IAM users by default are denied access to billing data even with admin access until the root account allows access for IAM users to access billing data. You can see charges by service in the billing and costs management section. You can set alerts with budgets which will email you when you go over a set threshold (e.g 85%) of the set budget.

EC2 can be attached with both EBS and EFS volume types. EFS is shared storage, EC2 instance store is integrated storage of EC2, which will be deleted with the instance. Bootstrap (User data) script is the script that would run the moment the EC2 is initialized for the very first time. The bigger the script, the more boot time it requires, also the script is run using the root user.

EC2 instance types consist of families which consist of an instance class (c, m, x) along with the generation (3, 4, 5) and the size. (micro, large, 2xlarge) Difference between different families is the balance between Compute, memory and networking. Like M, T and A family instances are general purpose, while C instance family is compute optimized like fast CPUs. There are memory optimized instances such as R family and storage optimized like I and T.

Security groups only contain allow rules, they manage the traffic allowed to flow in and out of our ec2s, the rules are referenced by IP or by sg.

Sg can be attached to multiple instances and they are locked down to a region/VPC combination. Sg lives outside the EC2 and if traffic is blocked the EC2 instance won't see it. Time out means traffic got blocked by sg,  connection refused means traffic went through by application gave an error. Inbound is blocked and Outbound is allowed completely by default.

Don't enter your access keys in an ec2 instance using aws configure as it is a bad practice, instead use IAM roles.

EC2 Instance purchasing options:
- On-Demand Instances - short workload, predictable pricing, pay by second.

- Reserved (1 or 3 years ONLY!!, NO in-between) - where Reserved instances give long workloads and convertible reserved instances give long workloads with flexible instances. Scope is regional or zonal, payment is upfront(big discount), no upfront(small discount), partial upfront(medium discount). Discount is up to 72% compared to on-demand for reserved and 66% for convertible reserved. The longer the period, the bigger the discount. You can sell the reserved capacity in the reserved instance marketplace if you no longer need them. Recommended for steady state usage applications (like database)

- Savings Plans (1 & 3 years) - commitment to an amount of usage (10$/hour for 1 or 3 years), long workload. Locked to a specific instance family & region (e.g M5 in us-east-1). Flexibility across instance size, OS and tenancy 

- Spot instances - very short workloads, cheap, can be lost anytime (not reliable). Discount upto 90%. You can lose them anytime if your max price is exceeded by current spot price. Useful for failure resilient workloads such as Batch jobs, data analysis, Image processing etc. not suitable for critical jobs or databases

- Dedicated hosts - book an entire physical server, control instance placement. Allows you to address compliance requirements and use server bound software license. You can purchase on-demand and reserved. Useful for software with BYOL model or companies with strong compliance requirements. Check the internal hardware and network settings of the physical server for your instances only in this method

- Dedicated instances - no other customers will share your hardware. Reserve hardware and vms will be created on that specific hardware.

- Capacity Reservations - reserve capacity in a specific AZ for any duration. No time commitment (create/cancel anytime) and no billing discount. Combine with regional reservations and savings plan from billing discount. Charged at On-demand rate where you run instances or not. Suitable for short-term, uninterrupted workloads in a specific az

Linux and windows instances are billed by second after 1 minute, rest are billed hourly.

Spot instances when they go above max price can be either stopped or terminated with a 2 minute grace period. Stopping would allow you to start from where you left off once the spot price becomes less than your max price.

Spot request consists of Max price, desired number of instances, launch specification, request type (one-time | persistent) valid from, valid until. One time request type is when you make a request and once the instances are created from that request, the request goes away. In persistent spot requests when you stop or terminate your spot instances or your instances get reclaimed by AWS due to max price breach, your spot request will detect this and automatically create new instances based on your request specifications.

You can only cancel the spot instances that are open, active or disabled. Cancelling a spot request does not terminate instances. You must first terminate the request then the instances otherwise the request will keep creating new spot instances when you terminate the instances. Interruption types are: stop, terminate, hibernate
Allocation strategies are capacity optimized, lowest price and price capacity optimized.

Spot Fleets = set of spot instances + (optional) on-demand instances. The Spot fleet will try its best to meet the target capacity with price constraints. Define a launch pool, instance type, OS, Availability zone. Can have multiple launch pools so that fleet can choose. Spot fleet stops launching instances when reaching capacity or max cost. Choose a spot fleet from the lowest price or diversify with different pools for more availability or a pool with the optimal capacity for the number of instances. Recommended is to choose a pool with the highest capacity, then select the pool with the lowest price. Spot fleet is smart enough to select from a pool with an applied filter like choose a pool from all these pools with the lowest price or highest capacity.

In the dedicated hosts purchasing option, the vendor license bills you based on the physical cores and underlying network socket visibility.

Use memory optimized instances for in-memory database solutions.

Private IP in private (local) networks with the internet gateway (proxy) having a public IP which allows it to speak with public servers (servers with public ip). Public IPs can be static or dynamic. Static IPs in AWS are known as Elastic IPs, you can own 5 in one account. Poor decision tho, better is to use a dynamic ip and assign a DNS name to it.

Placement groups gives you control over EC2 placement startegy, Following are the startegies:
- Cluster: clusterd instances into a low-latency group in a single availability zone. It provides great bandwidth (upto 10Gbps) as instances are close to eachother in one az, cons are low availability. Used in big data jobs for fast processing and for applications that need extremely low latency and fast network speed
- Spread: spreads instances across underlying hardware (max 7 instances per group per az), pros are that each instance is on separate hardware, reduced simultaneous failure risk, used for applications that require high availability or for apps where each instance must be isolated from failure from each other
- Partition: spreads instances across many different partitions (server racks) with each partition having multiple instances within an AZ. Partitions span across multiple azs. Scales to 100s of EC2 instances per group. Ec2 instances can get info for the partition in the form of metadata. Used in big data jobs which are aware of partition (Casandra, Hadoop, Kafka etc.)

ENIs are also known as vNIC attached to an instance. ENIs can have a primary private IPv4 along with one or more secondary IPv4. One Elastic IPv4 per private IPv4, One public IPv4 and one or more sg along with one MAC address.

You can create an ENI independently and attach them to EC2 instances later for failover. Bound to a specific az. By attaching secondary ENIs, you can move secondary static private IPs as well as Elastic IPs from one EC2 instance to another for failover. Again ENI can only be in one AZ!

EC2 hibernate is used to stop the instance with losing the current state, the contents of RAM are stored in a file in the root directory of the EBS volume, though EBS must have enough space on it to store the RAM dump, so if 8gb ram, then 8gb free on EBS. This makes the boot faster as services are already intialized and you don't lose the instance state. The root EBS volume must be encrypted however. This is helpful for long running process usecases or for services that take time to initialize as they are already active during hibernation. Supports alot of ec2 families and AMI, but not bare metal instances. Only works with EBS (encrypted). Available for On demand, reserved and spot instances and you cannot hibernate for more than 60 days